{
    "spectral": {
        "Wavelet absolute mean": {
            "complexity": "linear",
            "description": "Computes CWT absolute mean value of each wavelet scale.",
            "function": "tsfel.wavelet_abs_mean",
            "parameters": {
                "function": "scipy.signal.ricker",
                "widths": "np.arange(1,10)"
            },
            "n_features": "widths",
            "use": "yes",
            "tag": [
                "eeg",
                "ecg"
            ]
        },
        "Spectral kurtosis": {
            "complexity": "linear",
            "description": "Computes the flatness of a distribution around its mean value.",
            "function": "tsfel.spectral_kurtosis",
            "parameters": {
                "fs": 100
            },
            "n_features": 1,
            "use": "yes"
        },
        "Spectral variation": {
            "complexity": "log",
            "description": "Computes the amount of variation of the spectrum along time.",
            "function": "tsfel.spectral_variation",
            "parameters": {
                "fs": 100
            },
            "n_features": 1,
            "use": "yes"
        },
        "Mean diff": {
            "complexity": "constant",
            "description": "Computes mean of differences of the signal.",
            "function": "tsfel.mean_diff",
            "parameters": "",
            "n_features": 1,
            "use": "yes"
        },
        "Mean": {
            "complexity": "constant",
            "description": "Computes the mean value of the signal.",
            "function": "tsfel.calc_mean",
            "parameters": "",
            "n_features": 1,
            "use": "yes",
            "tag": "inertial"
        },
        "Spectral skewness": {
            "complexity": "linear",
            "description": "Computes the asymmetry of a distribution around its mean value.",
            "function": "tsfel.spectral_skewness",
            "parameters": {
                "fs": 100
            },
            "n_features": 1,
            "use": "yes"
        },
        "Kurtosis": {
            "complexity": "constant",
            "description": "Computes kurtosis of the signal.",
            "function": "tsfel.kurtosis",
            "parameters": "",
            "n_features": 1,
            "use": "yes"
        },
        "Spectral spread": {
            "complexity": "linear",
            "description": "Computes the spread of the spectrum around its mean value.",
            "function": "tsfel.spectral_spread",
            "parameters": {
                "fs": 100
            },
            "n_features": 1,
            "use": "yes"
        },
        "Spectral entropy": {
            "complexity": "log",
            "description": "Computes the spectral entropy of the signal based on Fourier transform.",
            "function": "tsfel.spectral_entropy",
            "parameters": {
                "fs": 100
            },
            "n_features": 1,
            "use": "yes",
            "tag": "eeg"
        },
        "Max power spectrum": {
            "complexity": "log",
            "description": "Computes the maximum power spectrum density.",
            "function": "tsfel.max_power_spectrum",
            "parameters": {
                "fs": 100
            },
            "n_features": 1,
            "use": "yes"
        },
        "Power bandwidth": {
            "complexity": "log",
            "description": "Computes power spectrum density bandwidth of the signal.",
            "function": "tsfel.power_bandwidth",
            "parameters": {
                "fs": 100
            },
            "n_features": 1,
            "use": "yes"
        },
        "Centroid": {
            "complexity": "constant",
            "description": "Computes the centroid along the time axis.",
            "function": "tsfel.calc_centroid",
            "parameters": {
                "fs": 100
            },
            "n_features": 1,
            "use": "yes"
        },
        "Spectral positive turning points": {
            "complexity": "log",
            "description": "Computes number of positive turning points of the fft magnitude signal",
            "function": "tsfel.spectral_positive_turning",
            "parameters": {
                "fs": 100
            },
            "n_features": 1,
            "use": "yes"
        },
        "Spectral distance": {
            "complexity": "log",
            "description": "Computes the signal spectral distance.",
            "function": "tsfel.spectral_distance",
            "parameters": {
                "fs": 100
            },
            "n_features": 1,
            "use": "yes"
        }
    }
}